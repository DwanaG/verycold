[gd_scene load_steps=6 format=2]

[ext_resource path="res://StartMenu.tscn" type="PackedScene" id=1]
[ext_resource path="res://Fonts/robotolightfont.tres" type="DynamicFont" id=2]

[sub_resource type="GDScript" id=1]

script/source = "extends Node

export(PackedScene) var start_level

var levelHolder : Node
var bigText : Label

var current_level : Node
var currentBigTextTimer : Timer

var allow_input = true

var isSlomo
var startSlomoTime
var slomoSecondsFixed : float
var slomoAmount

func _ready():
	levelHolder = get_node(\"Current Level\")
	bigText = get_node(\"Overlay UI/Big Text\")
	set_level(start_level)
	
func slomo(secondsFixed : float, amount: float):
	Engine.time_scale = amount
	isSlomo = true
	startSlomoTime = OS.get_ticks_msec()
	slomoSecondsFixed = secondsFixed
	slomoAmount = amount

func _process(delta):
	var now = OS.get_ticks_msec()
	var slomoChangeTime = 2.0
	if isSlomo:
		var after = now - (startSlomoTime + (slomoSecondsFixed * 1000))
		if after >= 0:
			var slomoFactor = after / (slomoChangeTime * 1000)
			var timeScale = clamp(lerp(slomoAmount, 1, slomoFactor), 0.1, 1)
			Engine.time_scale = timeScale
			if timeScale == 1:
				isSlomo = false
	
func set_level(level : PackedScene):
	Engine.time_scale = 1
	get_tree().paused = false
	
	if is_instance_valid(current_level):
		current_level.queue_free()
		yield(get_tree(), \"idle_frame\")

	current_level = level.instance()
	levelHolder.add_child(current_level)

func player_died():
	clearBigText()
	get_tree().paused = true
	allow_input = false
	var dead = get_node(\"Overlay UI\").find_node(\"Dead\")
	dead.visible = true
	tween().interpolate_property(dead, \"modulate:a\", 0.5, 1, 1, Tween.TRANS_QUAD, Tween.EASE_OUT)
	
	yield(delay(2, true, false), \"timeout\")
	
	set_level(start_level)
	dead.modulate.a = 0
	dead.visible = false
	
func delay(seconds : float = 1, start : bool = true, pausable : bool = true):
	var timer = Timer.new()
	
	var parent = get_node(\"Current Level\") if pausable else self
	parent.add_child(timer)
	
	timer.one_shot = true
	timer.wait_time = seconds
	if start:
		timer.start()
	return timer
	
func clearBigText():
	bigText.text = \"\"
	
func showBigText(text : String, totalTime : float = 2):
	if currentBigTextTimer and !currentBigTextTimer.is_stopped():
		currentBigTextTimer.stop()
	
	var words = text.split(\" \")
	var timer = delay(totalTime / words.size())
	timer.one_shot = false
	currentBigTextTimer = timer
	
	for word in words:
		bigText.text = word
		yield(timer, \"timeout\")
	
	clearBigText()
	
func level_add(obj):
	current_level.add_child(obj)
	
func tween():
	var tween = Tween.new()
	add_child(tween)
	tween.start()
	return tween"

[sub_resource type="Gradient" id=2]

offsets = PoolRealArray( 0 )
colors = PoolColorArray( 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=3]

flags = 4
gradient = SubResource( 2 )
width = 1423
_sections_unfolded = [ "gradient" ]

[node name="Game" type="Node"]
pause_mode = 2
script = SubResource( 1 )
_sections_unfolded = [ "Pause", "start_level" ]
start_level = ExtResource( 1 )

[node name="Overlay UI" type="Control" parent="."]
editor/display_folded = true
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
_sections_unfolded = [ "Mouse", "Pause" ]

[node name="Dead" type="TextureRect" parent="Overlay UI"]
visible = false
modulate = Color( 1, 0, 0, 0.552941 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = SubResource( 3 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Material", "Mouse", "Theme", "Visibility", "texture" ]

[node name="Big Text" type="Label" parent="Overlay UI"]
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -1.0
margin_top = -1.0
margin_right = 1025.0
margin_bottom = 600.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
custom_fonts/font = ExtResource( 2 )
align = 1
valign = 1
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1
_sections_unfolded = [ "Custom Fonts", "custom_fonts", "custom_fonts/font" ]

[node name="Current Level" type="Node" parent="."]
pause_mode = 1
_sections_unfolded = [ "Pause", "Script" ]

