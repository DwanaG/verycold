[gd_scene load_steps=9 format=2]

[ext_resource path="res://Flying Gun.tscn" type="PackedScene" id=1]
[ext_resource path="res://Models/humanoid.dae" type="PackedScene" id=2]
[ext_resource path="res://Player Hand.tscn" type="PackedScene" id=3]
[ext_resource path="res://Sprites/xhairs/crosshair012.png" type="Texture" id=4]
[ext_resource path="res://Audio/AirSwish1.wav" type="AudioStream" id=5]

[sub_resource type="PhysicsMaterial" id=1]

friction = 0.8
rough = false
bounce = 0.0
absorbent = false

[sub_resource type="GDScript" id=2]

script/source = "extends RigidBody

export(float, 0, 100) var max_move_speed = 1
export(float, 0, 100) var accel_speed = 1
export(float, 0, 2) var mouse_sensitivity_x = 1
export(float, 0, 2) var mouse_sensitivity_y = 1
export(float, 0, 100) var gun_speed = 1
export(float, 0, 100) var jump_force = 1

export(PackedScene) var gun_projectile

var desiredMoveVector = Vector2()
var yaw : Spatial
var pitch : Spatial
var look : RayCast
var targetGun : RayCast
var shotGun
var camera : Camera
var try_jump = false
var anim : AnimationPlayer

var throwGun_sound

var hasGun : bool = true

func _ready():
	camera = find_node(\"Camera\")
	yaw = get_node(\"Yaw\")
	pitch = get_node(\"Yaw/Pitch\")
	look = find_node(\"Look\")
	targetGun = find_node(\"Target Gun\")
	throwGun_sound = get_node(\"throwGun\")
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	anim = get_node(\"Yaw/Pitch/Player Hand/Armature/AnimationPlayer\")
	startAnimation()
	
func startAnimation():
	anim.play(\"PickUpGun\")
	yield(delay(0.5), \"timeout\")
	anim.play(\"HoldingGun\")
	
func _input(event):
	var mouseMode = Input.get_mouse_mode()
	if (event.is_action_pressed(\"escape\")):
		if (mouseMode == Input.MOUSE_MODE_CAPTURED):
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
		else:
			get_tree().quit()
		get_tree().set_input_as_handled()
		
	
func _unhandled_input(event):
	var mouseMode = Input.get_mouse_mode()
	if (event.is_action_pressed(\"fire\")):
		if (mouseMode != Input.MOUSE_MODE_CAPTURED):
			Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
			return
		fire_or_return(false)
	if (event.is_action_pressed(\"fire_alt\")):
		fire_or_return(true)
		pass
		
	if (event.is_action_pressed(\"jump\")):
		try_jump = true
		pass
		
	if (event is InputEventMouseMotion and mouseMode == Input.MOUSE_MODE_CAPTURED):
		yaw.set_transform( yaw.get_transform() \\
			.rotated(Vector3.UP, deg2rad(-event.relative.x) * mouse_sensitivity_x))
			
		pitch.set_transform( pitch.get_transform() \\
			.rotated(pitch.get_transform().basis.x, deg2rad(event.relative.y) * mouse_sensitivity_y))

func fire_or_return(alt):
	if (!hasGun):
		returnGun(alt)
		return
	
	hasGun = false
	anim.play(\"ThrowGun\")
	get_node(\"throwGun\").pitch_scale = Engine.time_scale
	throwGun_sound.play()
	yield(delay(0.33), \"timeout\")	
	
	var projectile : RigidBody = gun_projectile.instance()
	var pos = find_node(\"Gun\").global_transform;
	projectile.global_transform = pos
	get_node(\"/root/Game\").level_add(projectile)
	var direction = (look.get_collision_point() - pos.origin).normalized()
	projectile.apply_central_impulse(direction * gun_speed)
	projectile.player = self
	
	find_node(\"Gun\").visible = false
	shotGun = projectile
	
func returnGun(alt):
	if (targetGun.is_colliding()):
		shotGun.recall(alt);
	
func _process(delta):
	var moveVector = Vector2(
		Input.get_action_strength(\"strafe_left\") - Input.get_action_strength(\"strafe_right\"),
		Input.get_action_strength(\"move_forward\") - Input.get_action_strength(\"move_backward\")
		)
	
	desiredMoveVector = moveVector.normalized()
	
func _physics_process(delta):
	if (shotGun != null):
		if (targetGun.is_colliding()):
			shotGun.glow()
		else:
			shotGun.unglow()

func _integrate_forces(state):
	var localAccelVector = Vector3(desiredMoveVector.x, 0, desiredMoveVector.y) * accel_speed
	var globalAccelVector = yaw.get_global_transform().basis.xform(localAccelVector);
	if globalAccelVector.length_squared() > 0.1:
		state.add_force(globalAccelVector, Vector3())
	
	var flat_motion = Vector2(state.linear_velocity.x, state.linear_velocity.z)
	if (flat_motion.length_squared() > max_move_speed * max_move_speed):
		flat_motion = flat_motion.normalized() * max_move_speed
		state.linear_velocity = Vector3(flat_motion.x, state.linear_velocity.y, flat_motion.y)
	
	if try_jump:
		try_jump = false
		var contactCount = state.get_contact_count()
		var isOnGround = false
		for i in range(0, contactCount):
			var normal = state.get_contact_local_normal(i)
			if normal.dot(Vector3.UP) > 0.8:
				isOnGround = true
				break
		if isOnGround:
			apply_central_impulse(Vector3.UP * jump_force)

func pickupGun():
	shotGun = null
	hasGun = true
	find_node(\"Gun\").visible = true
	anim.play(\"PickUpGun\")

func _on_Player_body_entered(body):
	if body.get_filename() == \"res://object scenes/Bullet.tscn\":
		get_node(\"/root/Game\").player_died()
		
func delay(seconds : float = 1, start : bool = true):
	var timer = Timer.new()
	add_child(timer)
	timer.one_shot = true
	timer.wait_time = seconds
	if start:
		timer.start()
	return timer
"

[sub_resource type="CapsuleShape" id=3]

radius = 0.55387
height = 2.50823

[node name="Player" type="RigidBody"]
input_ray_pickable = true
input_capture_on_drag = false
collision_layer = 4
collision_mask = 1
mode = 2
mass = 1.0
friction = 0.8
bounce = 0.0
physics_material_override = SubResource( 1 )
gravity_scale = 1.0
custom_integrator = false
continuous_cd = true
contacts_reported = 10
contact_monitor = true
sleeping = false
can_sleep = false
axis_lock_linear_x = false
axis_lock_linear_y = false
axis_lock_linear_z = false
axis_lock_angular_x = false
axis_lock_angular_y = false
axis_lock_angular_z = false
linear_velocity = Vector3( 0, 0, 0 )
linear_damp = -1.0
angular_velocity = Vector3( 0, 0, 0 )
angular_damp = -1.0
script = SubResource( 2 )
_sections_unfolded = [ "Angular", "Collision", "Linear", "Transform" ]
max_move_speed = 6.0
accel_speed = 40.0
mouse_sensitivity_x = 0.169
mouse_sensitivity_y = 0.169
gun_speed = 20.0
jump_force = 4.0
gun_projectile = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
shape = SubResource( 3 )
disabled = false
_sections_unfolded = [ "Transform", "shape" ]

[node name="Humanoid Reference" parent="." instance=ExtResource( 2 )]
transform = Transform( 0.589347, 0, 0, 0, 0.589657, 0, 0, 0, 0.589657, 0.0144887, -1.79667, 0 )
visible = false
_sections_unfolded = [ "Transform" ]

[node name="Yaw" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.12, 0 )
_sections_unfolded = [ "Transform" ]

[node name="Pitch" type="Spatial" parent="Yaw"]
_sections_unfolded = [ "Transform" ]

[node name="Head" type="Spatial" parent="Yaw/Pitch"]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0 )
_sections_unfolded = [ "Transform" ]

[node name="Camera" type="Camera" parent="Yaw/Pitch/Head"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.32473e-07, 0, 0 )
keep_aspect = 1
cull_mask = 1048575
environment = null
h_offset = 0.0
v_offset = 0.0
doppler_tracking = 0
projection = 0
current = true
fov = 70.0
size = 1.0
near = 0.05
far = 100.0
_sections_unfolded = [ "Transform" ]

[node name="Look" type="RayCast" parent="Yaw/Pitch/Head"]
enabled = true
exclude_parent = true
cast_to = Vector3( 0, 0, -999 )
collision_mask = 1
collide_with_areas = false
collide_with_bodies = true
_sections_unfolded = [ "Collide With", "Matrix", "Transform" ]

[node name="Target Gun" type="RayCast" parent="Yaw/Pitch/Head"]
enabled = true
exclude_parent = true
cast_to = Vector3( 0, 0, -999 )
collision_mask = 2
collide_with_areas = true
collide_with_bodies = true
_sections_unfolded = [ "Collide With", "Transform" ]

[node name="Gun Spawn Position" type="Position3D" parent="Yaw/Pitch"]
transform = Transform( 1, 0, 7.10543e-15, 0, 1, 0, -7.10543e-15, 0, 1, -0.838549, -0.315495, 2.04427 )
_sections_unfolded = [ "Transform" ]

[node name="Direction" type="RayCast" parent="Yaw/Pitch/Gun Spawn Position"]
enabled = false
exclude_parent = true
cast_to = Vector3( 0, -1, 0 )
collision_mask = 1
collide_with_areas = false
collide_with_bodies = true

[node name="Player Hand" parent="Yaw/Pitch" instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.64, -0.39, 0.73 )
_sections_unfolded = [ "Transform" ]

[node name="Crosshair" type="TextureRect" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -32.0
margin_top = -32.0
margin_right = 32.0
margin_bottom = 32.0
rect_scale = Vector2( 0.5, 0.5 )
rect_pivot_offset = Vector2( 32, 32 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 4 )
stretch_mode = 5
_sections_unfolded = [ "Anchor", "Grow Direction", "Margin", "Mouse", "Rect", "texture" ]

[node name="throwGun" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )
volume_db = 0.0
pitch_scale = 1.0
autoplay = false
stream_paused = false
mix_target = 0
bus = "Master"

[connection signal="body_entered" from="." to="." method="_on_Player_body_entered"]
